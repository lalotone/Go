Hi there!!

I'm working with Go in an API for the bus frequency of my city, but i'm a little bit stuck on the threads when i try to make HTTP Get to many urls.
Without concurrency, the programs takes over 16 minutes to complete the 1500 url calls to take the HTTP status code, and i was trying to use the concurrency, but after reading many posts i don't understand how goroutines work... 

Here is the code:

    package main

    import (
    "fmt"
    "net/http"
    "strconv"
    "time"
    )
    var i int = 0
    var z string
    var message = make(chan string)

    /*func main(){
    for i = 0; i < 2000; i++ {
        z = strconv.Itoa(i)
        url := "http://www.urbanosdezaragoza.es/frm_esquemaparadatime.php?poste=" + z
        resp, err := http.Get(url)
        if err != nil {
            fmt.Println("Houston, we've got problems")
        }else{
            if resp.StatusCode == 200{
                fmt.Println("OK: El poste "+z+" existe")
            }else{
                fmt.Println("WARN: El poste "+z+" NO existe")
            }
        }
    }
    }*/
    func getBusPostStatus(initPost, finalPost int){
        for i = initPost; i < finalPost; i++ {
         z = strconv.Itoa(i)
         url := "http://www.urbanosdezaragoza.es/frm_esquemaparadatime.php?poste=" + z
    resp, err := http.Get(url)
    if err != nil {
        fmt.Println("Houston, we've got problems")
    }else{
        if resp.StatusCode == 200{
            //fmt.Println("OK: El poste "+z+" existe")
            message <- "OK: The bus post "+z+" exists"
        }else{
            //fmt.Println("WARN: El poste "+z+" NO existe")
            message <- "WARN: The bus post "+z+" does not exist"
        }   
        }
     }
    }
    func main(){
        start := time.Now()
        //for i = 0; i < 1500; i++{
        go getBusPostStatus(0, 200)
        msgOne := <- message
        fmt.Println(msgOne)
        go getBusPostStatus(200, 400)
        msgTwo := <-message
        fmt.Println(msgTwo)
        /*go getBusPostStatus(400, 600)
        go getBusPostStatus(600, 800)
        go getBusPostStatus(800, 1000)
        go getBusPostStatus(1000, 1200)
        go getBusPostStatus(1200, 1400)
        go getBusPostStatus(1400, 1500)*/
       //}
       timeExec:= time.Since(start)
       fmt.Println("Time to exec code = ", timeExec)

       var input string
       fmt.Scanln(&input)
       fmt.Println("done")
    }

Many thanks in advance!! 
